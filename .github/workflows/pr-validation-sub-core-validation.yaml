name: Validation Steps (sub)

on: 
  workflow_call:
    inputs:
      environment:
        description: 'Environment to run tests against'
        required: true
        type: string
    secrets:
      PRIVATE_REPOS_SSH_KEY:
        required: true

defaults:
  run:
    shell: bash

env:
  SCRIPTS_FOLDER: "./interop-infra-commons/scripts/helm"

jobs:
  chart_validation:
    name: Helm Chart validation
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        chartType: ["microservice", "cronjob"]
      fail-fast: false
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29
      - name: Checkout scripts repository
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29
        with:
          repository: pagopa/interop-infra-commons
          path: interop-infra-commons 
          fetch-depth: 0
          sparse-checkout: 'scripts/helm'
          ref: ${{ vars.INFRA_COMMONS_TAG }}
          ssh-key: ${{ secrets.PRIVATE_REPOS_SSH_KEY }}
      - name: Helm Chart Linting
        id: helm_lint
        env: 
          CHART_TYPE: ${{ matrix.chartType }}
        run: |
          set -euo pipefail

          OPTIONS=""

          if [[ $CHART_TYPE == "microservice" ]]; then
            OPTIONS=" --microservices "
          elif [[ $CHART_TYPE == "cronjob" ]]; then
            OPTIONS=" --jobs "
          else
            echo "::error:: Workflow cannot be run on selected chart $CHART_TYPE"
            exit 1
          fi

          export PROJECT_DIR=$(pwd)

          $SCRIPTS_FOLDER/helmLint-main.sh --debug --environment ${{ inputs.environment }} --output console $OPTIONS -i $PROJECT_DIR/commons/${{ inputs.environment }}/images.yaml

  templating_setup:
    name: Setup steps
    runs-on: ubuntu-22.04
    env:
      TARGET_ENVIRONMENT: ${{ inputs.environment }}
    outputs:
      microservices: ${{ steps.set-outputs.outputs.microservices }}
      cronjobs: ${{ steps.set-outputs.outputs.cronjobs }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29
      - id: set-outputs
        run: |
          echo "microservices=$(find microservices -type f -path "*/$TARGET_ENVIRONMENT/values.yaml" -exec dirname {} \; | awk -F'/' '{print $2}' | jq -R -s -c 'split("\n")[:-1]')" >> "$GITHUB_OUTPUT"
          echo "cronjobs=$(find jobs -type f -path "*/$TARGET_ENVIRONMENT/values.yaml" -exec dirname {} \; | awk -F'/' '{print $2}' | jq -R -s -c 'split("\n")[:-1]')" >> "$GITHUB_OUTPUT"

  template_microservices:
    name: ${{ matrix.microservice }}
    needs: [ templating_setup ]
    runs-on: ubuntu-22.04
    if: ${{ ! contains(needs.templating_setup.outputs.microservices, '[]') }}
    strategy:
      matrix:
        microservice: ${{ fromJson(needs.templating_setup.outputs.microservices) }}
      fail-fast: false
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29
      - name: Checkout scripts repository
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29
        with:
          repository: pagopa/interop-infra-commons
          path: interop-infra-commons 
          fetch-depth: 0
          sparse-checkout: 'scripts/helm'
          ref: ${{ vars.INFRA_COMMONS_TAG }}
          ssh-key: ${{ secrets.PRIVATE_REPOS_SSH_KEY }}
      - name: Helm Template Microservice
        id: helm_template_ms
        env: 
          MICROSERVICE_NAME: ${{ matrix.microservice }}
        run: |
          set -euo pipefail
          
          export PROJECT_DIR=$(pwd)

          $SCRIPTS_FOLDER/helmTemplate-svc-single.sh --debug --environment ${{ inputs.environment }} --microservice $MICROSERVICE_NAME -i $PROJECT_DIR/commons/${{ inputs.environment }}/images.yaml --output console
      
  template_cronjobs:
    name: ${{ matrix.cronjob }}
    needs: [ templating_setup ]
    runs-on: ubuntu-22.04
    if: ${{ ! contains(needs.templating_setup.outputs.cronjobs, '[]') }}
    strategy:
      matrix:
        cronjob: ${{ fromJson(needs.templating_setup.outputs.cronjobs) }}
      fail-fast: false
    steps:    
      - name: Checkout
        id: checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29
      - name: Checkout scripts repository
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29
        with:
          repository: pagopa/interop-infra-commons
          path: interop-infra-commons 
          fetch-depth: 0
          sparse-checkout: 'scripts/helm'
          ref: ${{ vars.INFRA_COMMONS_TAG }}
          ssh-key: ${{ secrets.PRIVATE_REPOS_SSH_KEY }}
      - name: Helm Chart Template
        id: helm_template
        env: 
          CRONJOB_NAME: ${{ matrix.cronjob }}
        run: |
          set -euo pipefail
          
          export PROJECT_DIR=$(pwd)

          $SCRIPTS_FOLDER/helmTemplate-cron-single.sh --debug --environment ${{ inputs.environment }} --job $CRONJOB_NAME -i $PROJECT_DIR/commons/${{ inputs.environment }}/images.yaml --output console
